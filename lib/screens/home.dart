// @dart=2.9
import 'dart:async';
import 'dart:convert';
import 'dart:core';
import 'dart:io';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:http/http.dart' as http;
import 'package:newsapp/backend/backend.dart';
import 'package:path_provider/path_provider.dart';
import 'package:sqflite/sqflite.dart';
import 'package:sqflite/sqlite_api.dart';

import 'article.dart';

Future<Autogenerated> fetchPost() async {
  // BuildContext context;

  //SharedPreferences prefs = await SharedPreferences.getInstance();
  //Return String
  // String email = prefs.getString('email');
  // Uri url = Uri.parse(
  //     'https://livescore-football.p.rapidapi.com/soccer/news-list?page=1');

  Uri url = Uri.parse("https://www.grabthesite.com/abc/api/login.php");
  final response = await http.get(url, headers: {
    'x-rapidapi-key': '33d9d45697mshcda53c695f2624cp13c0a1jsn30126426a794'
  });
  if (response.statusCode == 200) {
    // If the call to the server was successful, parse the JSON.
    // count++;
    return Autogenerated.fromJson(json.decode(response.body));
  } else {
    // If that call was not successful, throw an error.
    throw Exception('Failed to load post');
  }
}

class Autogenerated {
  int status;
  List<Data> data;

  Autogenerated({this.status, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    if (json['data'] != null) {
      data = new List<Data>();
      json['data'].forEach((v) {
        data.add(new Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['status'] = this.status;
    if (this.data != null) {
      data['data'] = this.data.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Data {
  String id;
  int publishedEpoch;
  String caption;
  String published;
  String title;
  String image;
  String description;
  String url;
  String thumbnail2;
  String thumbnail1;
  String slug;

  Data(
      {this.id,
      this.publishedEpoch,
      this.caption,
      this.published,
      this.title,
      this.image,
      this.description,
      this.url,
      this.thumbnail2,
      this.thumbnail1,
      this.slug});

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    publishedEpoch = json['published_epoch'];
    caption = json['caption'];
    published = json['published'];
    title = json['title'];
    image = json['image'];
    description = json['description'];
    url = json['url'];
    thumbnail2 = json['thumbnail_2'];
    thumbnail1 = json['thumbnail_1'];
    slug = json['slug'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['published_epoch'] = this.publishedEpoch;
    data['caption'] = this.caption;
    data['published'] = this.published;
    data['title'] = this.title;
    data['image'] = this.image;
    data['description'] = this.description;
    data['url'] = this.url;
    data['thumbnail_2'] = this.thumbnail2;
    data['thumbnail_1'] = this.thumbnail1;
    data['slug'] = this.slug;
    return data;
  }
}

class Home extends StatefulWidget {
  const Home({key}) : super(key: key);
  static const sid = 'home';
  State<StatefulWidget> createState() {
    return _HomeState();
  }
}

class DBProvider {
  DBProvider._();
  static final DBProvider db = DBProvider._();
}

initDB() async {
  Directory documentsDirectory = await getApplicationDocumentsDirectory();
  String path = documentsDirectory.path + "sport.db";
  return await openDatabase(path, version: 1, onOpen: (db) {},
      onCreate: (Database db, int version) async {
    // await db.execute("CREATE TABLE bookmark ("
    //     "id INTEGER PRIMARY KEY,"
    //     "title TEXT,"
    //     "title TEXT,"
    //     ")");
  });
}

Database _database;

Future<Database> get database async {
  if (_database != null) return _database;

  // if _database is null we instantiate it
  _database = await initDB();
  return _database;
}

// fetch_bookmark() async {
//   final db = await database;
//  // bookmark_list = await db.query("bookmark");
//   // bookmark_list = await db.rawQuery("SELECT * FROM bookmark");
//
//   // return res;
// }

/// This is the private State class that goes with MyStatefulWidget.
class _HomeState extends State<Home> {
  String text = "shh";
  Future<Autogenerated> post;

  @override
  void initState() {
    super.initState();
    post = fetchPost();
    // WidgetsBinding.instance.addPostFrameCallback((_) => () {
    //       setState(() {
    //         post = post;
    //       });
    //     });
    // Future.delayed(Duration(milliseconds: 1000));
    // if failed,use refreshFailed()
    // WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
    // new Future.delayed(const Duration(seconds: 2), () {
    //   setState(() {});
    // });

    const oneSec = Duration(seconds: 1);
    // new Timer.periodic(
    //     oneSec,
    //     (Timer t) => setState(() {
    //           post = post;
    //         }));

    // const oneSec = Duration(seconds: 1);
    //
    // new Timer.periodic(
    //     oneSec,
    //     (Timer t) => setState(() {
    //           // post = fetchPost();
    //         }));
    // new Future.delayed(const Duration(seconds: 2), () {
    //   setState(() {});
    // });
    // new Future.delayed(const Duration(seconds: 2), () {
    //   setState(() {});
    // });
  }

  // void didChangedependencies() {
  //   super.didChangeDependencies();
  //   post = fetchPost();
  // }

  List<Widget> list = List();
  IconData bookmark_light = FontAwesomeIcons.bookmark;
  IconData bookmark_dark = FontAwesomeIcons.solidBookmark;
  List<Widget> list2 = new List();

  // Future<List> fetch_bookmark(
  //     height,
  //     width,
  //     String id,
  //     String title,
  //     String image,
  //     String desc,
  //     String t2,
  //     String caption,
  //     String published) async {
  //   final db = await database;
  //   await db.execute(
  //       'CREATE TABLE IF NOT EXISTS bookmark(id TEXT,title TEXT,image TEXT)');
  //
  //   int count = (Sqflite.firstIntValue(
  //       await db.rawQuery('SELECT COUNT(*) FROM bookmark WHERE id=' + id)));
  //   Future listadd(count) async {
  //     if (count > 0) {
  //       print(count.toString() + "anurag");
  //       //   list.add(Text("hello"));
  //
  //       await Future.delayed(const Duration(seconds: 1), () {
  //         list.add(GestureDetector(
  //             onTap: () {
  //               Navigator.push(
  //                 context,
  //                 MaterialPageRoute(
  //                     builder: (context) => Article(),
  //                     settings: RouteSettings(
  //                       arguments: Blogdata(
  //                           title, image, desc, t2, caption, published),
  //                     )),
  //               );
  //             },
  //             child: Padding(
  //               padding: const EdgeInsets.fromLTRB(15, 15, 15, 0),
  //               child: Container(
  //                   height: height / 3,
  //                   width: width,
  //                   decoration: BoxDecoration(
  //                       borderRadius: BorderRadius.circular(15),
  //                       border: Border.all(color: Color(0xfff4f4f6))),
  //                   child: Column(
  //                     children: <Widget>[
  //                       ClipRRect(
  //                           borderRadius: BorderRadius.vertical(
  //                             top: Radius.circular(15),
  //                             bottom: Radius.circular(0),
  //                           ),
  //                           child: Image.network(image,
  //                               width: width,
  //                               height: height / 5,
  //                               fit: BoxFit.fitWidth)),
  //                       Row(
  //                         children: [
  //                           Expanded(
  //                               flex: 8,
  //                               child: Column(children: [
  //                                 Text(title,
  //                                     textAlign: TextAlign.left,
  //                                     style: TextStyle(
  //                                         fontSize: 18.0,
  //                                         fontWeight: FontWeight.bold,
  //                                         color: Colors.black))
  //                               ])),
  //                           Expanded(
  //                               flex: 2,
  //                               child: Column(
  //                                 children: [
  //                                   Padding(
  //                                     padding:
  //                                         const EdgeInsets.fromLTRB(0, 0, 0, 0),
  //                                     child: Align(
  //                                         alignment: Alignment.centerLeft,
  //                                         child: IconButton(
  //                                             icon: Icon(bookmark_dark,
  //                                                 color: Color(0xff676d87)),
  //                                             onPressed: () {
  //                                               delete_bookmark() async {
  //                                                 final db = await database;
  //                                                 await db.rawDelete(
  //                                                     'DELETE FROM bookmark WHERE id =' +
  //                                                         id.toString());
  //                                                 // db.close();
  //                                               }
  //
  //                                               delete_bookmark();
  //                                               setState(() {
  //                                                 bookmark_dark =
  //                                                     FontAwesomeIcons.bookmark;
  //                                               });
  //                                             })),
  //                                   )
  //                                 ],
  //                               )),
  //                         ],
  //                       )
  //                     ],
  //                   )),
  //             )));
  //       });
  //     } else {
  //       await Future.delayed(const Duration(seconds: 1), () {
  //         list.add(
  //           GestureDetector(
  //               onTap: () {
  //                 Navigator.push(
  //                   context,
  //                   MaterialPageRoute(
  //                       builder: (context) => Article(),
  //                       settings: RouteSettings(
  //                         arguments: Blogdata(
  //                             title, image, desc, t2, caption, published),
  //                       )),
  //                 );
  //               },
  //               child: Padding(
  //                 padding: const EdgeInsets.fromLTRB(15, 15, 15, 0),
  //                 child: Container(
  //                     height: height / 3,
  //                     width: width,
  //                     decoration: BoxDecoration(
  //                         borderRadius: BorderRadius.circular(15),
  //                         border: Border.all(color: Color(0xfff4f4f6))),
  //                     child: Column(
  //                       children: <Widget>[
  //                         ClipRRect(
  //                             borderRadius: BorderRadius.vertical(
  //                               top: Radius.circular(15),
  //                               bottom: Radius.circular(0),
  //                             ),
  //                             child: Image.network(image,
  //                                 width: width,
  //                                 height: height / 5,
  //                                 fit: BoxFit.fitWidth)),
  //                         Row(
  //                           children: [
  //                             Expanded(
  //                                 flex: 8,
  //                                 child: Column(children: [
  //                                   Text(title,
  //                                       textAlign: TextAlign.left,
  //                                       style: TextStyle(
  //                                           fontSize: 18.0,
  //                                           fontWeight: FontWeight.bold,
  //                                           color: Colors.black))
  //                                 ])),
  //                             Expanded(
  //                                 flex: 2,
  //                                 child: Column(
  //                                   children: [
  //                                     Padding(
  //                                       padding: const EdgeInsets.fromLTRB(
  //                                           0, 0, 0, 0),
  //                                       child: Align(
  //                                           alignment: Alignment.centerLeft,
  //                                           child: IconButton(
  //                                             icon: Icon(bookmark_light,
  //                                                 color: Color(0xff676d87)),
  //                                             onPressed: () async {
  //                                               insert_bookmark() async {
  //                                                 final db = await database;
  //
  //                                                 var res = await db.rawInsert(
  //                                                     'INSERT INTO bookmark(id,title,image) VALUES ("${id}","${title}","${image}")');
  //                                                 // return res;
  //                                               }
  //
  //                                               await insert_bookmark();
  //                                               await setState(() {
  //                                                 bookmark_light =
  //                                                     FontAwesomeIcons
  //                                                         .solidBookmark;
  //                                               });
  //                                             },
  //                                           )),
  //                                     )
  //                                   ],
  //                                 )),
  //                           ],
  //                         )
  //                       ],
  //                     )),
  //               )),
  //         );
  //       });
  //     }
  //   }
  //
  //   // await listadd(count);
  //
  //   //   print(bookmark_lists.length.toString() + "anurag");
  //
  //   // return temp;
  //   // print(bookmark_lists);
  //   // await db.close();
  //
  //   // return res;
  // }

  @override
  Widget build(BuildContext context) {
    double height = MediaQuery.of(context).size.height;
    double width = MediaQuery.of(context).size.width;

    final isPortrait =
        MediaQuery.of(context).orientation == Orientation.portrait;
    const Key = ValueKey<String>('bottom-sliver-list');
    return Scaffold(body: () {
      return FutureBuilder<Autogenerated>(
        future: post,
        builder: (context, snapshot) {
          // ignore: deprecated_member_use
          // List list3 = new List();
          //   list.add();

//        list.add(Padding(
//          padding:
//          const EdgeInsets.only(
//              top: 8, bottom: 16, left: 8, right: 8),
//          child: Row(
//            children: <Widget>[
//              Container(
//                width: width - 32,
//                child: RichText(
//                  textAlign: TextAlign.left,
//                  text: TextSpan(
//                    children: [
//                      TextSpan(
//                        text: 'Bitcoin Transactions',
//                        style: text2.copyWith(
//                          color: color4,
//                        ),
//                      ),
//                    ],
//                  ),
//                ),
//              ),
//            ],
//          ),
//        ));

          if (snapshot.hasData) {
            //   tid_pass=snapshot.data.tid;
            for (int i = 0; i < snapshot.data.data.length; i++) {
              // Future<void> caller() async {
              //   try {
              //     await fetch_bookmark(
              //         height,
              //         width,
              //         snapshot.data.data[i].id,
              //         snapshot.data.data[i].title,
              //         snapshot.data.data[i].image,
              //         snapshot.data.data[i].description,
              //         snapshot.data.data[i].thumbnail2,
              //         snapshot.data.data[i].caption,
              //         snapshot.data.data[i].published);
              //   } catch (err) {
              //     print('Caught error: $err');
              //   }
              // }

              // caller().then((value) => () {
              //       if (list.length < (i + 1)) {
              //         caller();
              //       }
              //     });
              // print(list);
              // print(decider.toString() + "anurag");
              // list.add(new Text("hello"));

              list.add(GestureDetector(
                  onTap: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                          builder: (context) => Article(),
                          settings: RouteSettings(
                            arguments: Blogdata(
                                snapshot.data.data[i].id,
                                snapshot.data.data[i].title,
                                snapshot.data.data[i].image,
                                snapshot.data.data[i].description,
                                snapshot.data.data[i].thumbnail2,
                                snapshot.data.data[i].caption,
                                snapshot.data.data[i].published),
                          )),
                    );
                  },
                  child: Padding(
                    padding: const EdgeInsets.fromLTRB(15, 15, 15, 0),
                    child: Container(
                        height: height / 3,
                        width: width,
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(15),
                            border: Border.all(color: Color(0xfff4f4f6))),
                        child: Column(
                          children: <Widget>[
                            ClipRRect(
                                borderRadius: BorderRadius.vertical(
                                  top: Radius.circular(15),
                                  bottom: Radius.circular(0),
                                ),
                                child: Image.network(
                                    snapshot.data.data[i].image,
                                    width: width,
                                    height: height / 5,
                                    fit: BoxFit.fitWidth)),
                            Row(
                              children: [
                                Expanded(
                                    flex: 8,
                                    child: Column(children: [
                                      Text(snapshot.data.data[i].title,
                                          textAlign: TextAlign.left,
                                          style: TextStyle(
                                              fontSize: 18.0,
                                              fontWeight: FontWeight.bold,
                                              color: Colors.black))
                                    ])),
                                // Expanded(
                                //     flex: 2,
                                //     child: Column(
                                //       children: [
                                //         Padding(
                                //           padding:
                                //           const EdgeInsets.fromLTRB(0, 0, 0, 0),
                                //           child: Align(
                                //               alignment: Alignment.centerLeft,
                                //               child: IconButton(
                                //                   icon: Icon(bookmark_dark,
                                //                       color: Color(0xff676d87)),
                                //                   onPressed: () {
                                //                     delete_bookmark() async {
                                //                       final db = await database;
                                //                       await db.rawDelete(
                                //                           'DELETE FROM bookmark WHERE id =' +
                                //                               id.toString());
                                //                       // db.close();
                                //                     }
                                //
                                //                     delete_bookmark();
                                //                     setState(() {
                                //                       bookmark_dark =
                                //                           FontAwesomeIcons.bookmark;
                                //                     });
                                //                   })),
                                //         )
                                //       ],
                                //     )),
                              ],
                            )
                          ],
                        )),
                  )));

              list2.add(new GestureDetector(
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => Article(),
                        settings: RouteSettings(
                          arguments: Blogdata(
                              snapshot.data.data[i].id,
                              snapshot.data.data[i].title,
                              snapshot.data.data[i].image,
                              snapshot.data.data[i].description,
                              snapshot.data.data[i].thumbnail2,
                              snapshot.data.data[i].caption,
                              snapshot.data.data[i].published),
                        )),
                  );
                },
                child: new Container(
                    margin: EdgeInsets.fromLTRB(15, 0, 0, 0),
                    child: ClipRRect(
                        borderRadius: BorderRadius.all(Radius.circular(15.0)),
                        child: Image.network(snapshot.data.data[i].image,
                            width: 200, height: 200, fit: BoxFit.cover))),
              ));
              // List apna_bm = List();
              // small() async {
              //   apna_bm =
              //       await fetch_bookmark(snapshot.data.data[i].id.toString())
              //           as List;
              // }

              // print(apna_bm.length.toString() + "anurags1");
              // print(apna_bm);
              //  print(bookmark_list_home.length.toString() + "anurag");

            }
            // setState(() {});
            if (snapshot.data.data.length == 0) {
              list.add(Text(
                "No news available",
                textAlign: TextAlign.center,
              ));
            } else {
              return CustomScrollView(slivers: <Widget>[
                SliverList(
                    delegate: SliverChildListDelegate(
                  [
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(children: <Widget>[
                          Padding(
                            padding: const EdgeInsets.fromLTRB(15, 50, 0, 0),
                            child: Text("Browser",
                                textAlign: TextAlign.left,
                                style: TextStyle(
                                    fontSize: 25.0,
                                    fontWeight: FontWeight.bold,
                                    color: Colors.black)),
                          ),
                        ]),
                        Padding(
                          padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
                          child: Text("Discover things of this world",
                              style: TextStyle(
                                  fontSize: 18.0,
                                  fontWeight: FontWeight.w600,
                                  color: Colors.grey)),
                        ),
// FloatingSearchBar(
//   hint: 'Search...',
//   scrollPadding: const EdgeInsets.only(top: 16, bottom: 56),
//   transitionDuration: const Duration(milliseconds: 800),
//   transitionCurve: Curves.easeInOut,
//   physics: const BouncingScrollPhysics(),
//   axisAlignment: isPortrait ? 0.0 : -1.0,
//   openAxisAlignment: 0.0,
//   width: isPortrait ? 600 : 500,
//   debounceDelay: const Duration(milliseconds: 500),
//   onQueryChanged: (query) {
//     // Call your model, bloc, controller here.
//   },
//   // Specify a custom transition to be used for
//   // animating between opened and closed stated.
//   transition: CircularFloatingSearchBarTransition(),
//   actions: [
//     FloatingSearchBarAction(
//       showIfOpened: false,
//       child: CircularButton(
//         icon: const Icon(Icons.place),
//         onPressed: () {},
//       ),
//     ),
//     FloatingSearchBarAction.searchToClear(
//       showIfClosed: false,
//     ),
//   ],
//   builder: (context, transition) {
//     return ClipRRect(
//       borderRadius: BorderRadius.circular(8),
//       child: Material(
//         color: Colors.white,
//         elevation: 4.0,
//         child: Column(
//           mainAxisSize: MainAxisSize.min,
//           children: Colors.accents.map((color) {
//             return Container(height: 112, color: color);
//           }).toList(),
//         ),
//       ),
//     );
//   },
// ),
//                       SingleChildScrollView(
//                         scrollDirection: Axis.horizontal,
//                         child: Row(
//                           children: <Widget>[
//                             Padding(
//                                 padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
//                                 child: TextButton(
//                                   child: Text("     Random     ".toUpperCase(),
//                                       style: TextStyle(
//                                           fontSize: 12,
//                                           fontWeight: FontWeight.bold,
//                                           color: Color(0xff808394))),
//                                   style: ButtonStyle(
//                                       padding: MaterialStateProperty.all<
//                                               EdgeInsets>(
//                                           EdgeInsets.fromLTRB(15, 5, 15, 5)),
//                                       backgroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                         Color(0xfff3f4f6),
//                                       ),
//                                       foregroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                               Colors.white),
//                                       shape: MaterialStateProperty.all<
//                                               RoundedRectangleBorder>(
//                                           RoundedRectangleBorder(
//                                         borderRadius:
//                                             BorderRadius.circular(30.0),
//                                       ))),
//                                   onPressed: () {
//                                     setState(() {});
//                                   },
//                                 )),
//                             Padding(
//                                 padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
//                                 child: TextButton(
//                                   child: Text("     Random     ".toUpperCase(),
//                                       style: TextStyle(
//                                           fontSize: 12,
//                                           fontWeight: FontWeight.bold,
//                                           color: Color(0xff808394))),
//                                   style: ButtonStyle(
//                                       padding: MaterialStateProperty.all<
//                                               EdgeInsets>(
//                                           EdgeInsets.fromLTRB(15, 5, 15, 5)),
//                                       backgroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                         Color(0xfff3f4f6),
//                                       ),
//                                       foregroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                               Colors.white),
//                                       shape: MaterialStateProperty.all<
//                                               RoundedRectangleBorder>(
//                                           RoundedRectangleBorder(
//                                         borderRadius:
//                                             BorderRadius.circular(30.0),
//                                       ))),
//                                   onPressed: () {
//                                     setState(() {});
//                                   },
//                                 )),
//                             Padding(
//                                 padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
//                                 child: TextButton(
//                                   child: Text("     Random     ".toUpperCase(),
//                                       style: TextStyle(
//                                           fontSize: 12,
//                                           fontWeight: FontWeight.bold,
//                                           color: Color(0xff808394))),
//                                   style: ButtonStyle(
//                                       padding: MaterialStateProperty.all<
//                                               EdgeInsets>(
//                                           EdgeInsets.fromLTRB(15, 5, 15, 5)),
//                                       backgroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                         Color(0xfff3f4f6),
//                                       ),
//                                       foregroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                               Colors.white),
//                                       shape: MaterialStateProperty.all<
//                                               RoundedRectangleBorder>(
//                                           RoundedRectangleBorder(
//                                         borderRadius:
//                                             BorderRadius.circular(30.0),
//                                       ))),
//                                   onPressed: () {
//                                     setState(() {});
//                                   },
//                                 )),
//                             Padding(
//                                 padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
//                                 child: TextButton(
//                                   child: Text("     Random     ".toUpperCase(),
//                                       style: TextStyle(
//                                           fontSize: 12,
//                                           fontWeight: FontWeight.bold,
//                                           color: Color(0xff808394))),
//                                   style: ButtonStyle(
//                                       padding: MaterialStateProperty.all<
//                                               EdgeInsets>(
//                                           EdgeInsets.fromLTRB(15, 5, 15, 5)),
//                                       backgroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                         Color(0xfff3f4f6),
//                                       ),
//                                       foregroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                               Colors.white),
//                                       shape: MaterialStateProperty.all<
//                                               RoundedRectangleBorder>(
//                                           RoundedRectangleBorder(
//                                         borderRadius:
//                                             BorderRadius.circular(30.0),
//                                       ))),
//                                   onPressed: () {
//                                     setState(() {});
//                                   },
//                                 )),
//                             Padding(
//                                 padding: const EdgeInsets.fromLTRB(15, 0, 0, 0),
//                                 child: TextButton(
//                                   child: Text("     Random     ".toUpperCase(),
//                                       style: TextStyle(
//                                           fontSize: 12,
//                                           fontWeight: FontWeight.bold,
//                                           color: Color(0xff808394))),
//                                   style: ButtonStyle(
//                                       padding: MaterialStateProperty.all<
//                                               EdgeInsets>(
//                                           EdgeInsets.fromLTRB(15, 5, 15, 5)),
//                                       backgroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                         Color(0xfff3f4f6),
//                                       ),
//                                       foregroundColor:
//                                           MaterialStateProperty.all<Color>(
//                                               Colors.white),
//                                       shape: MaterialStateProperty.all<
//                                               RoundedRectangleBorder>(
//                                           RoundedRectangleBorder(
//                                         borderRadius:
//                                             BorderRadius.circular(30.0),
//                                       ))),
//                                   onPressed: () {
//                                     setState(() {});
//                                   },
//                                 )),
//                           ],
//                         ),
//                       ),

                        SizedBox(
                          height: 200,
                          child: ListView(
                              scrollDirection: Axis.horizontal,
                              primary: false,
                              shrinkWrap: true,
                              children: list2),
                        ),

                        ListView(
                            primary: false, shrinkWrap: true, children: list),
//                       Padding(
//                           padding: const EdgeInsets.fromLTRB(15, 15, 15, 0),
//                           child: Container(
//                               height: height / 3,
//                               width: width,
//                               decoration: BoxDecoration(
//                                   borderRadius: BorderRadius.circular(15),
//                                   border: Border.all(color: Color(0xfff4f4f6))),
//                               child: Column(
//                                 children: <Widget>[
//                                   ClipRRect(
//                                       borderRadius: BorderRadius.vertical(
//                                         top: Radius.circular(15),
//                                         bottom: Radius.circular(0),
//                                       ),
//                                       child: Image.network(
//                                           'https://image.freepik.com/free-vector/vector-green-soccer-field-football-field-gridiron_1284-41290.jpg',
//                                           width: width,
//                                           height: height / 4,
//                                           fit: BoxFit.fitWidth)),
//                                   Row(
//                                     children: [
//                                       Expanded(
//                                           flex: 8,
//                                           child: Column(children: [
//                                             Text(
//                                                 'The football field is ready to take in action',
//                                                 textAlign: TextAlign.left,
//                                                 style: TextStyle(
//                                                     fontSize: 18.0,
//                                                     fontWeight: FontWeight.bold,
//                                                     color: Colors.black))
//                                           ])),
//                                       Expanded(
//                                           flex: 2,
//                                           child: Column(
//                                             children: [
//                                               Padding(
//                                                 padding:
//                                                     const EdgeInsets.fromLTRB(
//                                                         0, 0, 0, 0),
//                                                 child: Align(
//                                                     alignment:
//                                                         Alignment.centerLeft,
//                                                     child: IconButton(
//                                                       icon: const Icon(
//                                                           FontAwesomeIcons
//                                                               .bookmark,
//                                                           color: Color(
//                                                               0xff676d87)),
//                                                       onPressed: () {
//                                                         setState(() {
// // Navigator.pushNamed(context, Welcomescreen.sid);
//                                                         });
//                                                       },
//                                                     )),
//                                               )
//                                             ],
//                                           )),
//                                     ],
//                                   )
//                                 ],
//                               ))),
//                       Row(
//                         children: [
//                           Expanded(
//                               flex: 6,
//                               child: Padding(
//                                   padding:
//                                       const EdgeInsets.fromLTRB(15, 0, 0, 0),
//                                   child: Column(children: [
//                                     Text('Recommended for you',
//                                         textAlign: TextAlign.left,
//                                         style: TextStyle(
//                                             fontSize: 20.0,
//                                             fontWeight: FontWeight.bold,
//                                             color: Colors.black))
//                                   ]))),
//                           Expanded(
//                               flex: 4,
//                               child: Column(children: [
//                                 Wrap(children: <Widget>[
//                                   Padding(
//                                       padding:
//                                           const EdgeInsets.fromLTRB(0, 0, 0, 0),
//                                       child: TextButton(
//                                         child: Text("  See all  ",
//                                             style: TextStyle(
//                                                 fontSize: 18,
//                                                 fontWeight: FontWeight.bold,
//                                                 color: Color(0xff808394))),
//                                         style: ButtonStyle(
//                                             padding: MaterialStateProperty.all<
//                                                     EdgeInsets>(
//                                                 EdgeInsets.fromLTRB(
//                                                     15, 5, 15, 5)),
//                                             backgroundColor:
//                                                 MaterialStateProperty.all<
//                                                     Color>(
//                                               Color(0xffffffff),
//                                             ),
//                                             foregroundColor:
//                                                 MaterialStateProperty.all<Color>(
//                                                     Colors.white),
//                                             shape: MaterialStateProperty.all<
//                                                     RoundedRectangleBorder>(
//                                                 RoundedRectangleBorder(
//                                               borderRadius:
//                                                   BorderRadius.circular(30.0),
//                                             ))),
//                                         onPressed: () {
//                                           setState(() {});
//                                         },
//                                       )),
//                                 ])
//                               ])),
//                         ],
//                       ),
//                       Row(
//                         children: [
//                           Expanded(
//                               flex: 3,
//                               child: Column(
//                                 children: [
//                                   Container(
//                                       margin: EdgeInsets.fromLTRB(15, 0, 0, 15),
//                                       child: ClipRRect(
//                                           borderRadius: BorderRadius.all(
//                                               Radius.circular(10.0)),
//                                           child: Image.network(
//                                               'https://image.freepik.com/free-photo/man-sits-end-trolltunga-before-mountains_1304-5318.jpg',
//                                               width: 90,
//                                               height: 90,
//                                               fit: BoxFit.cover))),
//                                 ],
//                               )),
//                           Expanded(
//                               flex: 7,
//                               child: Column(
//                                 crossAxisAlignment: CrossAxisAlignment.start,
//                                 children: [
//                                   Row(
//                                     children: [
//                                       Padding(
//                                           padding: const EdgeInsets.fromLTRB(
//                                               15, 0, 0, 0),
//                                           child: Text('UI/UX Design',
//                                               textAlign: TextAlign.left,
//                                               style: TextStyle(
//                                                   fontSize: 10.0,
//                                                   fontWeight: FontWeight.bold,
//                                                   color: Color(0xff676d87))))
//                                     ],
//                                   ),
//                                   Row(
//                                     children: [
//                                       Padding(
//                                           padding: const EdgeInsets.fromLTRB(
//                                               15, 0, 0, 0),
//                                           child: Text('Testing',
//                                               textAlign: TextAlign.left,
//                                               style: TextStyle(
//                                                   fontSize: 20.0,
//                                                   fontWeight: FontWeight.bold,
//                                                   color: Colors.black)))
//                                     ],
//                                   ),
//                                 ],
//                               )),
//                         ],
//                       ),
                      ],
                    )
                  ],
                ))
              ]);
            }

            // return list;
            /* if(snapshot.data.message=="0")
            {
             // return Center(child:Text(snapshot.data.message));
            } */

            // return Text(snapshot.data.id);
          } else {
            //  return new Container(child: Text("no post"));
            return new Dialog(
              child: Container(
                color: Color.fromRGBO(18, 18, 18, 1),
                child: new Row(
                  //     height: 10,
                  mainAxisSize: MainAxisSize.max,
                  children: [
                    new Container(
                      height: 70,
                      margin: EdgeInsets.fromLTRB(8, 0, 0, 0),
                      /*  child: ColorLoader(
                                            colors: colors,
                                            duration: Duration(milliseconds: 1200)
                                        ),*/
                    ),
                    new CircularProgressIndicator(
                      valueColor: AlwaysStoppedAnimation<Color>(
                        Color.fromRGBO(62, 212, 0, 1),
                      ),
                    ),
                    new SizedBox(
                      width: 20,
                    ),
                    //     new Container(margin: EdgeInsets.fromLTRB(0,0,5,0),),
                    new Text(
                      "Loading",
                      style: TextStyle(color: Colors.white),
                    ),
                  ],
                ),
              ),
            );
          }

          return Dialog(
            child: Container(
              color: Color.fromRGBO(18, 18, 18, 1),
              child: new Row(
                //     height: 10,
                mainAxisSize: MainAxisSize.max,
                children: [
                  new Container(
                    height: 70,
                    margin: EdgeInsets.fromLTRB(8, 0, 0, 0),
                    /*  child: ColorLoader(
                                            colors: colors,
                                            duration: Duration(milliseconds: 1200)
                                        ),*/
                  ),
                  new CircularProgressIndicator(
                    valueColor: AlwaysStoppedAnimation<Color>(
                      Color.fromRGBO(62, 212, 0, 1),
                    ),
                  ),
                  new SizedBox(
                    width: 20,
                  ),
                  //     new Container(margin: EdgeInsets.fromLTRB(0,0,5,0),),
                  new Text(
                    "Loading",
                    style: TextStyle(color: Colors.white),
                  ),
                ],
              ),
            ),
          );

          // By default, show a loading spinner.
          //     return CircularProgressIndicator();
        },
      );
    }());
  }
}
